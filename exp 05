import random
def objective_function(x):
   return -x**2 + 4*x
# Hill Climbing Algorithm
def hill_climb(start, step_size=0.1, max_iterations=100):
   current_x = start
   current_value = objective_function(current_x)
   for i in range(max_iterations):
       # Generate a neighbor by slightly modifying x
       neighbor = current_x + random.choice([-step_size, step_size])
       neighbor_value = objective_function(neighbor)
       # If the new solution is better, move to it
       if neighbor_value > current_value:
           current_x, current_value = neighbor, neighbor_value
       else:
           break  
   return current_x, current_value
best_x, best_value = hill_climb(start=0)
print(f"Best solution found: x = {best_x}, f(x) = {best_value}") 
